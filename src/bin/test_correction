#!/usr/bin/env python3

import sys
import logging
import argparse
import cmd
import cProfile
import time
from pymysql.err import InternalError

from gzspell import analysis
from gzspell import server

logger = logging.getLogger(__name__)


def main(*args):

    parser = argparse.ArgumentParser()
    parser.add_argument('files', nargs='*')
    parser.add_argument('--host', default='localhost')
    parser.add_argument('--db', default='lexicon')
    parser.add_argument('--user', default='lexicon')
    parser.add_argument('--passwd', default='')
    parser.add_argument('--profile', action='store_true')
    parser.add_argument('--loglevel', default='WARNING')
    args = parser.parse_args(args)
    logging.basicConfig(level=args.loglevel)

    spell = analysis.Spell(analysis.Database(
            host=args.host, db=args.db, user=args.user, passwd=args.passwd))

    correct = 0
    dont_have = 0
    total = 0
    start = time.clock()
    for file in args.files:
        with open(file) as f:
            for line in f:
                wrong, right = line.split(',')
                if spell.check(right) != 'OK':
                    dont_have += 1
                    print("{} not in lexicon".format(right))
                while True:
                    try:
                        result = spell.correct(wrong)
                    except InternalError:  # too many connections
                        continue
                    else:
                        break
                print("{} corrected to {} (should be {})".format(
                    wrong, result, right))
                if result == right:
                    correct += 1
                total += 1
    end = time.clock()

    print("Runtime: {}".format(end - start))
    print("Correct: {}".format(correct))
    print("Words not in lexicon: {}".format(dont_have))
    print("Total words: {}".format(total))

if __name__ == '__main__':
    main(*sys.argv[1:])

# vim: set ft=python:
